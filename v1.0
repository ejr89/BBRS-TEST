//@version=5
strategy("Improved Bollinger Bands and RSI Strategy", "BBRSI_Improved", overlay=true)

// Input Parameters
bbLength = input.int(20, "BB Length", minval=1)
bbMult = input.float(2.0, "BB StdDev", minval=0.001, maxval=50)
rsiLength = input.int(14, "RSI Length", minval=1)  // Extended RSI period to capture broader trends
atrLength = input.int(14, "ATR Length", minval=1)
atrMultiplier = input.float(3.0, "ATR Multiplier", minval=0.1)  // Increased ATR multiplier for larger SL/TP

// Bollinger Bands Calculation
bbBasis = ta.sma(close, bbLength)
dev = bbMult * ta.stdev(close, bbLength)
bbUpper = bbBasis + dev
bbLower = bbBasis - dev

// RSI Calculation
rsi = ta.rsi(close, rsiLength)
rsiUpper = 70
rsiLower = 30

// ATR Calculation
atr = ta.atr(atrLength)

// Signals
longSignal = rsi < rsiLower and close < bbLower
shortSignal = rsi > rsiUpper and close > bbUpper

// Dynamic Stop Loss and Take Profit
longSL = close - atrMultiplier * atr
shortSL = close + atrMultiplier * atr
longTP = close + atrMultiplier * atr
shortTP = close - atrMultiplier * atr

// Exit Conditions 
// Adjusted to potentially allow trades to develop over more bars
// Consider using a condition to exit on RSI returning to neutral or BB basis crossover
exitLongSignal = rsi > rsiLower and rsi < 50 and close > bbBasis
exitShortSignal = rsi < rsiUpper and rsi > 50 and close < bbBasis

// Trailing Stop
trailPoints = atrMultiplier * atr

// Strategy Execution
if longSignal
    strategy.entry("long", strategy.long)
    strategy.exit("exit long", "long", stop=longSL, limit=longTP, trail_points=trailPoints, when=exitLongSignal, comment_loss="SL long", comment_profit="TP long")

if shortSignal
    strategy.entry("short", strategy.short)
    strategy.exit("exit short", "short", stop=shortSL, limit=shortTP, trail_points=trailPoints, when=exitShortSignal, comment_loss="SL short", comment_profit="TP short")
